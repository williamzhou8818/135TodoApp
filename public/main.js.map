{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/models/todolist.model.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.scss","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport {TodoComponent } from './todo/todo.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'tasks', component: TodoComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!-- Day 01\\n    For Header Need Home  register login contact once login \\nuser can see Then todo list and compeatil or not o can delete and change tasks -->\\n\\n<!-- Day 02 - improve Navbar \\n         Buile Api Use Node Express Moogess \\n    -  save Form data and get form data -->\\n\\n    <!-- At Tasks ->\\n         ->  Nav it Will be allow View all Daily Tasks Search Fieter \\\"day weekly monstly \\\"\\n         ->  Edit page \\\"update\\\"\\\" Delete\\\" -->\\n<app-nav></app-nav>\\n<section>\\n    <router-outlet></router-outlet>\\n</section>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { TodoComponent } from './todo/todo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid height100p banner\\\" id=\\\"home\\\">\\n    <div class=\\\"container h100\\\">\\n        <div class=\\\"contentBox h100\\\">\\n            <div>\\n                <h1>Let's Increase Your Productivity </h1>\\n                <h3>____\\\" 1-3-5 \\\" RULE ____</h3>\\n                <p>We Only have 24 hours per a day, no more no less.\\n                    But so many tasks waiting for been accomplish. \\n                    With 1-3-5 list means _ Frist, Only pick One Big and \\n                    Important thing. <br> Second, Pick Three Medium and Less crucial things. <br> And Last, Write Five Small and much less important things. <br> At the End Unless you will have fulfilled 4 Task, See How Good and easy it is. <br> \\n                    What will you waitting for, Let's Do IT ...  \\n                </p>\\n            </div>\\n        </div>\\n    </div>     \\n</div>\\n<section class=\\\"sec1\\\">\\n    <div class=\\\"container\\\">\\n        <!-- <div class=\\\"row\\\">\\n           emty for now            \\n        </div> -->\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8 mx-auto\\\">\\n            <form #form=\\\"ngForm\\\"  (submit)=\\\"onAddToDoSubmit()\\\" class=\\\"card\\\" style=\\\"width: 100%; background-color:floralwhite;\\\" novalidate>\\n              <h1>Today, I WILL DO ...</h1>\\n              <div class=\\\"form-group\\\" [class.has-error]= \\\"oneBigest.invalid && oneBigest.touched\\\" >\\n                <label class=\\\"control-label\\\">(Step 1) What's Bigest To Do</label>\\n                <input #oneBigest=\\\"ngModel\\\" required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"oneBigest\\\" [(ngModel)]=\\\"model.oneBigest\\\">\\n                <div *ngIf=\\\"oneBigest.invalid && oneBigest.touched\\\" class=\\\"alert alert-danger\\\">Please write your Bigest thing to do</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>(Step 2) What's Three Medium To Do</label>\\n                  <input required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"med_1\\\" [(ngModel)]=\\\"model.med_1\\\">\\n                  <div *ngIf=\\\"oneBigest.invalid && oneBigest.touched\\\" class=\\\"alert alert-danger\\\">Please write your Frist Medium thing to do</div>\\n\\n                  <input required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"med_2\\\" [(ngModel)]=\\\"model.med_2\\\">\\n                  <div *ngIf=\\\"oneBigest.invalid && oneBigest.touched\\\" class=\\\"alert alert-danger\\\">Please write your Second Medium thing to do</div>\\n\\n                  <input required type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"med_3\\\" [(ngModel)]=\\\"model.med_3\\\">\\n                  <div *ngIf=\\\"oneBigest.invalid && oneBigest.touched\\\" class=\\\"alert alert-danger\\\">Please write your Third Medium thing to do</div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label>(Step 3) What's Five Little ToDo (option)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sml_1\\\" [(ngModel)]=\\\"model.sml_1\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sml_2\\\" [(ngModel)]=\\\"model.sml_2\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sml_3\\\" [(ngModel)]=\\\"model.sml_3\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sml_4\\\" [(ngModel)]=\\\"model.sml_4\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sml_5\\\" [(ngModel)]=\\\"model.sml_5\\\">\\n              </div>\\n             <!-- <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                    <input  #newToDo (keyup.enter)=\\\"addToDo(newToDo.value)\\\" (blur)=\\\"addToDo(newToDo.value); newToDo.value='' \\\"  required type=\\\"text\\\"  class=\\\"form-control\\\" placeholder=\\\"Add One Bigest TODO\\\" aria-label=\\\"Add One Bigest Thing\\\" aria-describedby=\\\"button-addon2\\\"  name=\\\"bigesttodo\\\" ngModel>\\n                    <div class=\\\"input-group-append\\\">\\n                      <button  (click)=\\\"addToDo(newToDo.value)\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Add</button>\\n                    </div>\\n\\n                  </div>\\n             </div>\\n             <div class=\\\"col-sm-4\\\">\\n                <div class=\\\"input-group mb-3\\\">\\n                    <input #newMed (keyup.enter)=\\\"AddMed(newMed.value)\\\" (blur)=\\\"AddMed(newMed.value); newMed.value='' \\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add Three Medium TODO\\\" aria-label=\\\"Add Medium Things\\\" aria-describedby=\\\"button-addon2\\\">\\n                    <div class=\\\"input-group-append\\\">\\n                      <button class=\\\"btn btn-warning\\\" (click)=\\\"AddMed(newMed.value)\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Add</button>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"input-group mb-3\\\">\\n                        <input #newFiveThings (keyup.enter)=\\\"AddFiveThings(newFiveThings.value)\\\" (blur)=\\\"AddFiveThings(newFiveThings.value); newFiveThings.value='' \\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Add Five Little TODO\\\" aria-label=\\\"Add Five Little Things\\\" aria-describedby=\\\"button-addon2\\\">\\n                        <div class=\\\"input-group-append\\\">\\n                          <button class=\\\"btn btn-info\\\" type=\\\"button\\\" id=\\\"button-addon2\\\">Add</button>\\n                        </div>\\n                      </div>\\n                </div> -->\\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\"\\n                 [disabled]=\\\"form.invalid\\\">Add ToDo</button> \\n              </form>\\n            </div>\\n        </div>\\n      <!-- Model: {{model | json}} \\n      <br> \\n      Angular: {{form.value | json}}\\n\\n      <h3> Class Name </h3>\\n      <h4>{{oneBigest.invalid}}</h4> -->\\n\\n<!-- Show List -->\\n\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                     <ul class=\\\"list-group\\\">\\n                         <li class=\\\"list-group-item list-group-item-danger\\\" *ngFor=\\\"let OneToDo of AddOneToDo\\\">{{OneToDo}}</li>\\n                     </ul>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                     <ul class=\\\"list-group\\\">\\n                         <li class=\\\"list-group-item list-group-item-warning\\\" *ngFor=\\\"let med of addMeds\\\">{{med}}</li>\\n                     </ul>\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                        <ul class=\\\"list-group\\\">\\n                            <li class=\\\"list-group-item list-group-item-info\\\" *ngFor=\\\"let fivethings of addFiveThings\\\">{{fivethings}}</li>\\n                        </ul>\\n                </div>\\n        </div>\\n    </div>\\n\\n</section>\\n\\n\"","module.exports = \".myform {\\n  background-color: whitesmoke; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93aWxsaWFtemhvdS9Eb2N1bWVudHMvTXlQcm9qZWN0cy9Ub0RvMTM1L3RvZG8xMzUvc3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSw2QkFBNEIsRUFDL0IiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXlmb3JtIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZXNtb2tlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ToDoModel } from '../models/todolist.model';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  model = new ToDoModel('', '', '', '', '', '', '', '', '');\n\n  private url = 'http://localhost:3000/todo';\n\n  constructor(private http: HttpClient) { }\n  // const httpOptions = {\n  //   headers: new HttpHeader({\n  //     'Content-Type': 'application/json'\n  //   });\n  // };\n  title = 'todo135';\n  oneBigest: String;\n  // AddOneToDo = [];\n  // addMeds = [];\n  // addFiveThings = [];\n  // msg = '';\n  // nCnt = 0;\n  // nCnt2 = 0;\n  // nCnt3 = 0;\n\nonAddToDoSubmit() {\n  // tslint:disable-next-line:prefer-const\n  let  data = {\n    tOne: this.model.oneBigest,\n    tMed_1: this.model.med_1,\n    tMed_2: this.model.med_2,\n    tMed_3: this.model.med_3,\n    tSmall_1: this.model.sml_1,\n    tSmall_2: this.model.sml_2,\n    tSmall_3: this.model.sml_3,\n    tSmall_4: this.model.sml_4,\n    tSmall_5: this.model.sml_5\n  };\n  this.http.post(this.url, data)\n    .subscribe(response => {\n      console.log(response);\n    });\n  // console.log(this.model.oneBigest);\n  // console.log(this.model.med_1);\n  // console.log(this.model.med_2);\n  // console.log(this.model.med_3);\n\n\n\n  // const data = this.model;\n  // this.http.post(this.url, data)\n  //  .subscribe( response => {\n  //    console.log(response);\n  //  });\n}\n  // addToDo(newToDo: string) {\n  //   this.nCnt = this.nCnt + 1 ;\n  //   if ((this.nCnt) === 3 ) {\n  //       // this.msg = `Please Only Add One Bigest TODO`;\n  //       alert('Please only add One Bigest ToDo');\n  //   } else if (newToDo) {\n  //        this.AddOneToDo.push(newToDo);\n  //   }\n  // }\n\n\n  // AddMed(newMed: string) {\n  //  this.nCnt2 = this.nCnt2 + 1;\n  //   if ((this.nCnt2) === 5 ) {\n  //    // this.msg = `Please Only Add Three Mid TODO`;\n  //     alert('Please only add Three Med ToDo');\n  //     // save to database;\n  //   } else if (newMed) {\n  //        this.addMeds.push(newMed);\n  //   }\n\n  // }\n\n  // AddFiveThings(newFiveThings: string) {\n  //  // this.nCnt3 = this.nCnt3 + 1;\n  //   if ((newFiveThings)) {\n  //     this.addFiveThings.push(newFiveThings);\n  //   }\n  // }\n\n  ngOnInit() {\n  }\n\n}\n","export class ToDoModel {\n    constructor(\n        public oneBigest: String,\n        public med_1: String,\n        public med_2: String,\n        public med_3: String,\n        public sml_1: String,\n        public sml_2: String,\n        public sml_3: String,\n        public sml_4: String,\n        public sml_5: String\n    ) {}\n}\n","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n         <div class=\\\"container\\\">\\n            <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n            <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n          \\n            <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n              <ul class=\\\"navbar-nav ml-lg-auto\\\">\\n                <li class=\\\"nav-item active\\\">\\n                  <a class=\\\"nav-link\\\" routerLink=\\\"/\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <!-- <li class=\\\"nav-item dropdown\\\">\\n                        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                          Treatments\\n                        </a>\\n                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Traditional Thai</a>\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Deep Tissue</a>\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Relaxation Massage</a>\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Combination</a>\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Aromatherapy Oil</a>\\n                          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Reflexology-Foot</a>\\n                        </div>\\n                      </li> -->\\n                <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" routerLink=\\\"tasks\\\">Tasks</a>\\n                </li>\\n                <!-- <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" href=\\\"#OurTeam\\\">Our Team</a>\\n                </li> -->\\n                <!-- <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" href=\\\"#Gifts\\\">Gift Vouchers</a>\\n                </li> -->\\n                <li class=\\\"nav-item\\\">\\n                        <a class=\\\"nav-link\\\" href=\\\"#contact\\\">Contact</a>\\n                        <!-- DropDwon menu Make online Booking so on  -->\\n                </li>\\n              </ul>  \\n            </div>\\n        </div>\\n    </nav>\\n</header>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-item\\\">\\n    {{name}}\\n  </li>\\n</ul>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss']\n})\nexport class TodoComponent implements OnInit {\n  todos: any;\n  private url = 'http://localhost:3000/todo?email=william@com.au';\n  constructor(private http: HttpClient) {\n    http.get(this.url)\n    .subscribe(response => {\n      console.log(response);\n      this.todos = response;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}